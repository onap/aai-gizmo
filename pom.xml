<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>ajsc-archetype-parent</artifactId>
        <groupId>com.att.ajsc</groupId>
        <version>2.0.0</version>
    </parent>
    <groupId>org.onap.aai.gizmo</groupId>
    <artifactId>gizmo</artifactId>
    <version>1.1.0-SNAPSHOT</version>
    <name>aai-gizmo</name>

    <properties>
        <module.ajsc.namespace.name>crud-api</module.ajsc.namespace.name>
        <module.ajsc.namespace.version>v1</module.ajsc.namespace.version>
        <ajscRuntimeVersion>2.0.0</ajscRuntimeVersion>
        <absoluteDistFilesRoot>/appl/${project.artifactId}</absoluteDistFilesRoot>
        <nexusproxy>https://nexus.onap.org</nexusproxy>

        <!-- For NO Versioning, REMOVE the /${project.version} from the <distFilesRoot>
            property, below. PLEASE, NOTE: If your ${project.version} is a "-SNAPSHOT"
            version, THIS will be used as your directory structure. If you do NOT want
            this, simply remove the "-SNAPSHOT" from your <version> declaration at the
            top of pom.xml -->
        <distFilesRoot>/appl/${project.artifactId}/${project.version}</distFilesRoot>
        <runAjscHome>${basedir}/target/swm/package/nix/dist_files${distFilesRoot}</runAjscHome>

        <!-- Port Selection. A value of 0 will allow for dynamic port selection.
            For local testing, you may choose to hardcode this value to something like
            8080 -->
        <serverPort>0</serverPort>
        <sslport>9520</sslport>

        <testRouteOffer>workstation</testRouteOffer>
        <testEnv>DEV</testEnv>
        <checkstyle.config.location>google_checks.xml</checkstyle.config.location>

        <sonar.language>java</sonar.language>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.surefire.reportsPath>${project.build.directory}/surefire-reports
        </sonar.surefire.reportsPath>
        <sonar.jacoco.reportPath>${project.build.directory}/coverage-reports/jacoco.exec
        </sonar.jacoco.reportPath>
        <sonar.jacoco.reportMissing.force.zero>false</sonar.jacoco.reportMissing.force.zero>
        <sonar.projectVersion>${project.version}</sonar.projectVersion>
    </properties>

    <dependencies>

        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>1.6.1</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.att.aft</groupId>
            <artifactId>dme2</artifactId>
            <version>3.1.200</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.6.2</version>
        </dependency>

        <!-- Common logging framework -->
        <dependency>
          <groupId>org.openecomp.aai.logging-service</groupId>
          <artifactId>common-logging</artifactId>
          <version>1.0.0</version>
        </dependency>

        <dependency>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-core</artifactId>
          <version>1.1.7</version>
        </dependency>

        <dependency>
          <groupId>org.onap.aai.aai-common</groupId>
          <artifactId>aai-schema</artifactId>
          <version>1.1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.onap.aai.aai-common</groupId>
            <artifactId>aai-utils</artifactId>
            <version>1.1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.onap.aai.aai-common</groupId>
            <artifactId>aai-core</artifactId>
            <version>1.1.0-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
          <groupId>org.onap.aai.aai-common</groupId>
          <artifactId>aai-auth</artifactId>
          <version>1.1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
          <groupId>org.eclipse.persistence</groupId>
            <artifactId>eclipselink</artifactId>
            <version>2.6.2</version>
        </dependency>

        <!-- Champ graph database library. -->
        <dependency>
            <groupId>org.openecomp.aai</groupId>
            <artifactId>champ</artifactId> 
            <version>1.1.0-SNAPSHOT</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.hbase</groupId>
                    <artifactId>hbase-client</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.openecomp.aai</groupId>
            <artifactId>rest-client</artifactId>
            <version>1.1.1</version>
        </dependency>
		        <dependency>
            <groupId>net.dongliu</groupId>
            <artifactId>gson-java8-datatype</artifactId>
            <version>1.0.3</version>
        </dependency>
	<dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>2.2.0</version>
        </dependency>
		
		<!-- AAI-CORE specific dependencies -->
		<dependency>
        	<groupId>org.apache.tinkerpop</groupId>
        	<artifactId>gremlin-core</artifactId> 
	        <version>3.2.3</version>
	        <scope>provided</scope>
	        <exclusions>
	            <exclusion>
	                <groupId>org.slf4j</groupId>
	                <artifactId>slf4j-log4j12</artifactId>
	            </exclusion>
	            <exclusion>
	                <groupId>org.slf4j</groupId>
	                <artifactId>jcl-over-slf4j</artifactId>
	            </exclusion>
	        </exclusions>
     </dependency>

       <dependency>
            <groupId>org.apache.tinkerpop</groupId>
            <artifactId>tinkergraph-gremlin</artifactId>
            <version>3.2.3</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20131018</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

    </dependencies>


    <repositories>
      <repository>
        <id>central</id>
        <name>Maven 2 repository 2</name>
        <url>http://repo2.maven.org/maven2/</url>
      </repository>
      <repository>
        <id>ecomp-releases</id>
        <name>ECOMP Release Repository</name>
        <url>${nexusproxy}/content/repositories/releases/</url>
      </repository>
      <repository>
        <id>ecomp-snapshots</id>
        <name>ECOMP Snapshot Repository</name>
        <url>${nexusproxy}/content/repositories/snapshots/</url>
      </repository>
      <repository>
        <id>ecomp-staging</id>
        <name>ECOMP Staging Repository</name>
        <url>${nexusproxy}/content/repositories/staging/</url>
      </repository>

    </repositories>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <executions>
                    <execution>
                        <id>copy-docker-file</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target</outputDirectory>
                            <overwrite>true</overwrite>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/main/docker</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                </resource>
                                <resource>
                                  <directory>${basedir}/src/main/bin/</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
              <groupId>com.spotify</groupId>
              <artifactId>docker-maven-plugin</artifactId>
              <version>0.4.11</version>
              <configuration>
                <verbose>true</verbose>
                <serverId>docker-hub</serverId>
                <imageName>${docker.push.registry}/openecomp/${project.artifactId}</imageName>
                <dockerDirectory>${docker.location}</dockerDirectory>
                <imageTags>
                  <imageTag>latest</imageTag>
                </imageTags>
                <forceTags>true</forceTags>
              </configuration>
            </plugin>

            <!-- license plugin -->
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <header>License.txt</header>
                    <includes>
                        <include>src/main/java/**</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>format</goal>
                        </goals>
                        <phase>process-sources</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <reportPlugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-checkstyle-plugin</artifactId>
                            <version>2.17</version>
                            <reportSets>
                                <reportSet>
                                    <reports>
                                      <report>checkstyle</report>
                                    </reports>
                                </reportSet>
                            </reportSets>
                        </plugin>
                    </reportPlugins>
                </configuration>
            </plugin>

            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-deploy-plugin</artifactId>
              <configuration>
                <skip>true</skip>
              </configuration>
            </plugin>

            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>sonar-maven-plugin</artifactId>
              <version>3.2</version>
            </plugin>

            <plugin>
              <groupId>org.jacoco</groupId>
              <artifactId>jacoco-maven-plugin</artifactId>
              <version>0.7.7.201606060606</version>
              <configuration>
                <dumpOnExit>true</dumpOnExit>
              </configuration>
              <executions>
                <execution>
                  <id>jacoco-initialize-unit-tests</id>
                  <goals>
                    <goal>prepare-agent</goal>
                  </goals>
                  <configuration>
                    <destFile>${project.build.directory}/coverage-reports/jacoco.exec
                    </destFile>
                    <!-- <append>true</append> -->
                  </configuration>
                </execution>
              </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>runAjsc</id>
            <build>
                <defaultGoal>initialize</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.3.2</version>
                        <executions>
                            <execution>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <configuration>
                                    <includeProjectDependencies>false</includeProjectDependencies>
                                    <includePluginDependencies>true</includePluginDependencies>
                                    <executable>java</executable>
                                    <mainClass>com.att.ajsc.runner.Runner</mainClass>
                                    <executableDependency>
                                        <groupId>com.att.ajsc</groupId>
                                        <artifactId>ajsc-runner</artifactId>
                                    </executableDependency>
                                    <additionalClasspathElements>
                                        <additionalClasspathElement>
                                            ${basedir}/ajsc-shared-config/etc
                                        </additionalClasspathElement>
                                    </additionalClasspathElements>

                                    <environmentVariables>
                                        <AJSC_HOME>${runAjscHome}</AJSC_HOME>
                                    </environmentVariables>

                                    <!-- Main AJSC System Properties below (necessary for proper startup) -->
                                    <systemProperties>
                                        <systemProperty>
                                            <key>AJSC_HOME</key>
                                            <value>${runAjscHome}</value>
                                        </systemProperty>
                                        <systemProperty>
                                            <key>CONFIG_HOME</key>
                                            <value>${basedir}/appconfig-local/</value>
                                        </systemProperty>
                                        <systemProperty>
                                            <key>AJSC_CONF_HOME</key>
                                            <value>${basedir}/bundleconfig-local</value>
                                        </systemProperty>
                                        <systemProperty>
                                            <key>logback.configurationFile</key>
                                            <value>${basedir}/ajsc-shared-config/etc/logback.xml
                                            </value>
                                        </systemProperty>
                                        <systemProperty>
                                            <key>AJSC_SHARED_CONFIG</key>
                                            <value>${basedir}/ajsc-shared-config</value>
                                        </systemProperty>

                                        <sysproperty>
                                            <key>AJSC_EXTERNAL_LIB_FOLDERS</key>
                                            <value>${basedir}/target/commonLibs</value>
                                        </sysproperty>
                                        <sysproperty>
                                            <key>AJSC_EXTERNAL_PROPERTIES_FOLDERS</key>
                                            <value>${basedir}/ajsc-shared-config/etc</value>
                                        </sysproperty>

                                        <systemProperty>
                                            <key>AJSC_SERVICE_NAMESPACE</key>
                                            <value>${module.ajsc.namespace.name}</value>
                                        </systemProperty>
                                        <systemProperty>
                                            <key>AJSC_SERVICE_VERSION</key>
                                            <value>${module.ajsc.namespace.version}</value>
                                        </systemProperty>
                                        <systemProperty>
                                            <key>SOACLOUD_SERVICE_VERSION</key>
                                            <value>${project.version}</value>
                                        </systemProperty>
                                        <systemProperty>
                                            <key>server.port</key>
                                            <value>${serverPort}</value>
                                        </systemProperty>
                                    </systemProperties>

                                    <!-- Command Line Arguments to add to the java command. Here, you
                                        can specify the port as well as the Context you want your service to run
                                        in. Use context=/ to run in an unnamed Context (Root Context). The default
                                        configuration of the AJSC is to run under the / Context. Setting the port
                                        here can aid during the development phase of your service. However, you can
                                        leave this argument out entirely, and the AJSC will default to using an Ephemeral
                                        port. -->
                                    <arguments>
                                        <argument>context=/</argument>
                                        <argument>port=${serverPort}</argument>
                                        <argument>sslport=${sslport}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <executable>java</executable>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>com.att.ajsc</groupId>
                                <artifactId>ajsc-runner</artifactId>
                                <version>${ajscRuntimeVersion}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>4.5</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore</artifactId>
                <version>4.4.1</version>
            </dependency>
            <dependency>
                <groupId>org.json</groupId>
                <artifactId>json</artifactId>
                <version>20131018</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <distributionManagement>
      <repository>
        <id>ecomp-releases</id>
        <name>ECOMP Release Repository</name>
        <url>${nexusproxy}/content/repositories/releases/</url>
      </repository>
      <snapshotRepository>
        <id>ecomp-snapshots</id>
        <name>ECOMP Snapshot Repository</name>
        <url>${nexusproxy}/content/repositories/snapshots/</url>
      </snapshotRepository>
      <site>
        <id>ecomp-javadoc</id>
        <url>dav:https://ecomp-nexus:8443/repository/aai/gizmo-javadoc/${project.version}</url>
      </site>
    </distributionManagement>
</project>
